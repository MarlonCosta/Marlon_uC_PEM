// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.0.0 Build 211 04/27/2016 SJ Lite Edition"

// DATE "10/30/2016 21:22:50"

// 
// Device: Altera EP4CE6E22A7 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module FFJK (
	Q,
	CLK,
	J,
	K,
	Qq);
output 	Q;
input 	CLK;
input 	J;
input 	K;
output 	Qq;

// Design Ports Information
// Q	=>  Location: PIN_30,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Qq	=>  Location: PIN_32,	 I/O Standard: 2.5 V,	 Current Strength: Default
// CLK	=>  Location: PIN_28,	 I/O Standard: 2.5 V,	 Current Strength: Default
// K	=>  Location: PIN_10,	 I/O Standard: 2.5 V,	 Current Strength: Default
// J	=>  Location: PIN_31,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("Micro_Computador_min_1200mv_-40c_v_fast.sdo");
// synopsys translate_on

wire \Q~output_o ;
wire \Qq~output_o ;
wire \K~input_o ;
wire \CLK~input_o ;
wire \J~input_o ;
wire \inst3~combout ;
wire \inst2~combout ;


// Location: IOOBUF_X0_Y8_N16
cycloneive_io_obuf \Q~output (
	.i(!\inst2~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q~output_o ),
	.obar());
// synopsys translate_off
defparam \Q~output .bus_hold = "false";
defparam \Q~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y6_N16
cycloneive_io_obuf \Qq~output (
	.i(!\inst3~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Qq~output_o ),
	.obar());
// synopsys translate_off
defparam \Qq~output .bus_hold = "false";
defparam \Qq~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y18_N15
cycloneive_io_ibuf \K~input (
	.i(K),
	.ibar(gnd),
	.o(\K~input_o ));
// synopsys translate_off
defparam \K~input .bus_hold = "false";
defparam \K~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y9_N8
cycloneive_io_ibuf \CLK~input (
	.i(CLK),
	.ibar(gnd),
	.o(\CLK~input_o ));
// synopsys translate_off
defparam \CLK~input .bus_hold = "false";
defparam \CLK~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y7_N1
cycloneive_io_ibuf \J~input (
	.i(J),
	.ibar(gnd),
	.o(\J~input_o ));
// synopsys translate_off
defparam \J~input .bus_hold = "false";
defparam \J~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X2_Y7_N2
cycloneive_lcell_comb inst3(
// Equation(s):
// \inst3~combout  = ((\CLK~input_o  & (!\inst3~combout  & \J~input_o ))) # (!\inst2~combout )

	.dataa(\CLK~input_o ),
	.datab(\inst3~combout ),
	.datac(\J~input_o ),
	.datad(\inst2~combout ),
	.cin(gnd),
	.combout(\inst3~combout ),
	.cout());
// synopsys translate_off
defparam inst3.lut_mask = 16'h20FF;
defparam inst3.sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X2_Y7_N0
cycloneive_lcell_comb inst2(
// Equation(s):
// \inst2~combout  = ((\K~input_o  & (\CLK~input_o  & !\inst2~combout ))) # (!\inst3~combout )

	.dataa(\K~input_o ),
	.datab(\inst3~combout ),
	.datac(\CLK~input_o ),
	.datad(\inst2~combout ),
	.cin(gnd),
	.combout(\inst2~combout ),
	.cout());
// synopsys translate_off
defparam inst2.lut_mask = 16'h33B3;
defparam inst2.sum_lutc_input = "datac";
// synopsys translate_on

assign Q = \Q~output_o ;

assign Qq = \Qq~output_o ;

endmodule
